/* 
<li
                        key={currTodo.id}
                        className={cx("todo-ele", {
                          "strike-todo-ele": currTodo.done === true,
                        })}
                      >
                        <button
                          id="check-btn"
                          className={cx("btn-unchecked ", {
                            "btn-checked": currTodo.done === true,
                          })}
                          onClick={(e) => {
                            e.preventDefault();
                            onCheckUncheck(currTodo);
                          }}
                        >
                          {currTodo.done ? (
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              width="11"
                              height="9"
                            >
                              <path
                                fill="none"
                                stroke="#FFF"
                                strokeWidth="2"
                                d="M1 4.304L3.696 7l6-6"
                              />
                            </svg>
                          ) : null}
                        </button>
                        <p className="todo-text">{currTodo.value}</p>
                        <button
                          className="delete-todo"
                          onClick={(e) => {
                            e.preventDefault();
                            deleteTodo(currTodo.id);
                          }}
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="18"
                            height="18"
                          >
                            <path
                              fill="#9d9d9e"
                              fillRule="evenodd"
                              d="M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z"
                            />
                          </svg>
                        </button>
                      </li>
*/


 /* <div className="todo-types">
                    <button className="todo-types-btn">All</button>
                    <button className="todo-types-btn">Active</button>
                    <button className="todo-types-btn">completed</button>
                  </div>
                  <button className="todo-types-btn">Clear Completed</button> */
}



function TodoList(todos: Array<ToDo>) {
  console.log(todos);
  function onCheckUncheck(currTodo: ToDo) {
    const todoIndex = todos.findIndex((index) => index.id === currTodo.id);
    const tempTodos = [...todos];
    if (tempTodos[todoIndex].done === false) {
      tempTodos[todoIndex].done = true;
    } else {
      tempTodos[todoIndex].done = false;
    }
    // setTodos(tempTodos);
  }

  const addTodo: KeyboardEventHandler<HTMLInputElement> = (e) => {
    if (e.key === "Enter" && input) {
      setTodos((prevTodos) => [
        ...prevTodos,
        { id: uuidv4(), value: input, done: false },
      ]);
      setInput("");
    }
  };

  function deleteTodo(currTodoId: string) {
    // console.log(currTodoId);
    setTodos((prevTodos) =>
      prevTodos.filter((index) => index.id !== currTodoId)
    );
  }
  function deleteCompleted() {
    setTodos((prevTodos) => prevTodos.filter((todo) => todo.done === false));
  }
  return (
    <li
      key={currTodo.id}
      className={cx("todo-ele", {
        "strike-todo-ele": currTodo.done === true,
      })}
    >
      <button
        id="check-btn"
        className={cx("btn-unchecked ", {
          "btn-checked": currTodo.done === true,
        })}
        onClick={(e) => {
          e.preventDefault();
          onCheckUncheck(currTodo);
        }}
      >
        {currTodo.done ? (
          <svg xmlns="http://www.w3.org/2000/svg" width="11" height="9">
            <path
              fill="none"
              stroke="#FFF"
              strokeWidth="2"
              d="M1 4.304L3.696 7l6-6"
            />
          </svg>
        ) : null}
      </button>
      <p className="todo-text">{currTodo.value}</p>
      <button
        className="delete-todo"
        onClick={(e) => {
          e.preventDefault();
          deleteTodo(currTodo.id);
        }}
      >
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">
          <path
            fill="#9d9d9e"
            fillRule="evenodd"
            d="M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z"
          />
        </svg>
      </button>
    </li>
  );
}
